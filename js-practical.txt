Shape:

class Shape {
    constructor(colour = "Transparent") {
      this.colour = colour;
      this.type = "Shape";
    }
  
    describe() {
      console.log(`A ${this.colour} ${this.type}`);
    }
  }
  
  class Square extends Shape {
    constructor(colour, sideLength) {
      super(colour);
      this.sideLength = sideLength;
      this.type = "Square";
    }
  
    area() {
      return this.sideLength * this.sideLength;
    }
  }
  
  class Rectangle extends Shape {
    constructor(colour, width, height) {
      super(colour);
      this.width = width;
      this.height = height;
      this.type = "Rectangle";
    }
  
    area() {
      return this.width * this.height;
    }
  }
const square = new Square("blue", 5);
       const rectangle = new Rectangle("red", 5, 6);
       console.log( square.area() ); // 25
       console.log( rectangle.area() ); // 30
       for ( const shape of [square, rectangle] ) shape.describe();

----------------------------------------------------------------------------------
Utilities:

class Utilities {
    static camelCase(str) {
      const words = str.split(" ");
      // capitalize the first letter of each word after the first word
      const capitalizedWords = words.map((word, index) =>
        index === 0 ? word.toLowerCase() : word.charAt(0).toUpperCase() + word.slice(1)
      );
      // join the words together without any spaces
      return capitalizedWords.join("");
    }
  }
  console.log(Utilities.camelCase("hello there"))
       
       console.log(Utilities.camelCase("HELLO THERE"))
       
       console.log(Utilities.camelCase("I love cookies"))

       console.log(Utilities.camelCase("Monkey Banana"))
--------------------------------------------------------------------------------------
Most spoken languages:

function mostSpokenLanguages(countries, n) {
  let languageCounts = {};

  // Count the number of countries that speak each language
  countries.forEach(country => {
    country.languages.forEach(language => {
      if (language in languageCounts) {
        languageCounts[language]++;
      } else {
        languageCounts[language] = 1;
      }
    });
  });

  // Convert the languageCounts object to an array of objects
  let languageCountsArray = [];
  for (let language in languageCounts) {
    languageCountsArray.push({[language]: languageCounts[language]});
  }

  // Sort the languageCountsArray in descending order of count
  languageCountsArray.sort((a, b) => {
    return Object.values(b)[0] - Object.values(a)[0];
  });

  // Return the top n entries
  return languageCountsArray.slice(0, n);
}

console.log(mostSpokenLanguages(countries, 10));
console.log(mostSpokenLanguages(countries, 3));
